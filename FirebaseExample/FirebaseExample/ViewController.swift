//
//  ViewController.swift
//  FirebaseExample
//
//  Created by ÏÜåÏó∞ on 2022/10/05.
//

import UIKit

import FirebaseAnalytics

class ViewController: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()
        
//        // Ïª§Ïä§ÌÖÄ
//        Analytics.logEvent("rejack", parameters: [
//          "name": "ÏÜåÍπ°", // user name (UserDefaults, Realm ..)
//          "full_text": "ÏïàÎÖïÌïòÏÑ∏Ïöî?",
//        ])
//
//        // Í∏∞Î≥∏
//        Analytics.setDefaultEventParameters([
//          "level_name": "Caverns01",
//          "level_difficulty": 4
//        ])
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        print("üçä ViewController ViewWillAppear")
    }
    
    @IBAction func touchUpProfileButton(_ sender: UIButton) {
        present(ProfileViewController(), animated: true)
    }
    
    @IBAction func touchUpSettingButton(_ sender: UIButton) {
        navigationController?.pushViewController(SettingViewController(), animated: true)
    }
    
}

class ProfileViewController: UIViewController {
    override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = .lightGray
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        print("üçä ProfileViewController ViewWillAppear")
    }
}

class SettingViewController: UIViewController {
    override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = .brown
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated) // superÎ•º ÏûëÏÑ±ÌïòÏßÄ ÏïäÏúºÎ©¥ Î©îÏÑúÎìú Ïä§ÏúÑÏ¶êÎßÅÏù¥ Ïûò ÏïàÎê† Ïàò ÏûàÎã§. 
        print("üçä SettingViewController ViewWillAppear")
    }
}

extension UIViewController {
    
    // ÌîÑÎ°úÌçºÌã∞Î°ú Ìò∏Ï∂ú Í∞ÄÎä• 
    var topViewController: UIViewController? {
        return self.topViewController(self)
    }
    
    // ÏµúÏÉÅÏúÑ Î∑∞Ïª®Ìä∏Î°§Îü¨Î•º ÌåêÎã®Ìï¥Ï£ºÎäî Î©îÏÑúÎìú
    func topViewController(_ currentViewController: UIViewController) -> UIViewController {
        // tabbar
        if let tabBarController = currentViewController as? UITabBarController, let selectedViewController = tabBarController.selectedViewController {
            return self.topViewController(selectedViewController)
        }
        // navigatiton
        else if let navigationController = currentViewController as? UINavigationController, let visibleViewController = navigationController.visibleViewController {
            return self.topViewController(visibleViewController)
        }
        //
        else if let presentedViewController = currentViewController.presentedViewController {
            return self.topViewController(presentedViewController)
        }
        // Í∑∏Ïô∏
        else {
            return currentViewController
        }
    }
}

extension UIViewController {
    class func swizzleMethod() {
        let origin = #selector(viewWillAppear)
        let change = #selector(changeViewWillAppear)
        
        guard let originMethod = class_getInstanceMethod(UIViewController.self, origin), let changeMethod = class_getInstanceMethod(UIViewController.self, change) else {
            print("Ìï®ÏàòÎ•º Ï∞æÏùÑ Ïàò ÏóÜÍ±∞ÎÇò Ïò§Î•ò Î∞úÏÉù")
            return
        }
        
        method_exchangeImplementations(originMethod, changeMethod)
    }
    
    @objc func changeViewWillAppear() {
        print("Change ViewWillAppear SUCCEED")
    }
}
